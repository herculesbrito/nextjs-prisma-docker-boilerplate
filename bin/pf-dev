#!/bin/bash

set -euo pipefail


COMPOSE_FILE='docker-compose.yml'
export COMPOSE_FILE

# Find the current script directory, resolving symlinks as necessary
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

PF_ROOT_DIR="$DIR/../../.."
cd $PF_ROOT_DIR

SUBCOMMAND=${1:-help}

# Increase timeout to ensure that all containers have time to create
export COMPOSE_HTTP_TIMEOUT=360

USAGE="Usage: pf-dev [COMMAND] [ARGS...]

Manages a Docker-based development environment.

To get started, run:

  pf-dev pristine

The dev environment will the be available at:

  http://localhost:3000

Commands:
  update             Ensure that all required services are up and orphaned are deleted
  pristine           Start a clean environment and database (WARNING: destroys existing data!)
  migrate            Run prisma migrations

Any unrecognized command will be passed through to docker-compose. For example,
to check the status of containers in the environment:

  pf-dev ps

This invokes the 'docker-compose ps' command and forwards any given arguments.

For a list of available docker-compose commands, run:

  docker-compose help"

case "$SUBCOMMAND" in
  help)
    echo "$USAGE"
  ;;
  update)
    shift
    docker-compose up -d --remove-orphans $@
  ;;
  pristine)
    echo "This will destroy your containers and replace them with new ones."

    # Destroy containers and volumes
    docker-compose down -v --remove-orphans

    # Rebuild and restart containers
    pf-dev update --force-recreate --build

    echo "It may take few minutes to launch all containers."
    echo "You can access your environment at http://localhost:3000"
    echo "See for details: pf-dev logs -f"
    echo "Don't forget to run the command bellow to create the databas"
    echo "pf-dev db:setup"
    echo "This will reset your database and execute all migrations"
  ;;
  db:setup)
    shift
    docker-compose exec app npx prisma migrate reset
  ;;
  migrate:create)
    shift
    docker-compose exec app npx prisma migrate dev --name $@
  ;;
  migrate:deploy)
    shift
    docker-compose exec app npx prisma migrate deploy
  ;;
  rebuild)
    shift
    docker-compose up -d --force-recreate --build --no-deps $@
  ;;
  *)
    docker-compose $@
  ;;
esac

